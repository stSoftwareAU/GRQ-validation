name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-changes:
    name: Check for Changes
    runs-on: ubuntu-latest
    outputs:
      rust-changed: ${{ steps.filter.outputs.rust }}
      docs-changed: ${{ steps.filter.outputs.docs }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need previous commit for comparison
        
    - name: Check for changes
      id: filter
      run: |
        # Get list of changed files
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # For PRs, compare with base branch
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
        else
          # For pushes, compare with previous commit
          git diff --name-only HEAD~1...HEAD > changed_files.txt
        fi
        
        # Check if Rust files changed
        if grep -E "^(src/|Cargo\.toml|Cargo\.lock|tests/)" changed_files.txt > /dev/null; then
          echo "rust=true" >> $GITHUB_OUTPUT
        else
          echo "rust=false" >> $GITHUB_OUTPUT
        fi
        
        # Check if docs changed
        if grep -E "^(docs/)" changed_files.txt > /dev/null; then
          echo "docs=true" >> $GITHUB_OUTPUT
        else
          echo "docs=false" >> $GITHUB_OUTPUT
        fi
        
        echo "Changed files:"
        cat changed_files.txt

  test:
    name: Test and Quality Checks
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.rust-changed == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Update dependencies
      run: cargo update
      
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run linter
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Check types
      run: cargo check --all-targets --all-features
      
    - name: Run tests
      run: cargo test --all-targets --all-features --verbose
      
    - name: Generate test coverage
      run: |
        cargo install cargo-tarpaulin
        cargo tarpaulin --out Xml --output-dir coverage
      continue-on-error: true
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      continue-on-error: true

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: [check-changes, test]
    if: needs.check-changes.outputs.rust-changed == 'true' && (needs.test.result == 'success' || needs.test.result == 'skipped')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Build release
      run: cargo build --release
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: grq-validation-release
        path: target/release/grq-validation

  deploy-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: check-changes
    if: |
      github.ref == 'refs/heads/main' && 
      needs.check-changes.outputs.docs-changed == 'true'
    permissions:
      pages: write
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
      
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 